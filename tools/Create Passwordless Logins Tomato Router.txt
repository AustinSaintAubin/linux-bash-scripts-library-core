# == [ Build Keys ] ================================================
#ssh-keygen -t rsa;;  # On client (Mac OS X): On you host computer (not the diskstation) open a terminal and run the following command:

# On client (Tomato Router): On you host computer (not the diskstation) open a terminal and run the following command:
# http://tomatousb.org/forum/t-320537
# https://forum.openwrt.org/viewtopic.php?id=14148
# To login use: ( ssh -y -i /home/root/.ssh/id_rsa rsync@nas )
rm /home/root/.ssh/id_rsa
rm /home/root/.ssh/id_rsa.pub 
# Generate (id_rsa) for dropbear build of ssh, Will output 1024 bit rsa secret key to '/root/.ssh/id_rsa', will print out public key portion, this needs to be echo'd into id_rsa.pub
dropbearkey -t rsa -f ~/.ssh/id_rsa
# Echo "Public key portion" into (/home/root/.ssh/id_rsa.pub)
echo "ssh-rsa AAAAB3N……………………………………2wef54WbeBCA0Ut root@Tomato" > /home/root/.ssh/id_rsa.pub


# == [ Send Keys to Server / NAS ] ================================================
# Adds a clients id_rsa.pub to authorized_keys for user on NAS
USERNAME="rsync"
SERVER="nas"

# On NAS: You need to create a directory with a file containing the the authorized keys of clients being able to connect.
# On NAS: Copy the content of your id_rsa.pub file from your Host-computer (the one you want to connect from) into the authorized_keys file.
# On NAS: Change the file permissions of the authorized-key file.
cat ~/.ssh/id_rsa.pub | ssh $USERNAME@$SERVER 'mkdir ~/.ssh; touch ~/.ssh/authorized_keys; cat >> ~/.ssh/authorized_keys; chmod 700 ~/.ssh; chmod 644 ~/.ssh/authorized_keys; echo "========================"; cat ~/.ssh/authorized_keys; echo "========================";'
